{"version":3,"sources":["components/views/NotFound/NotFound.module.scss","components/layout/PageNav/PageNav.module.scss","components/layout/Footer/Footer.module.scss","components/layout/MainLayout/MainLayout.module.scss","redux/postsRedux.js","redux/loginRedux.js","redux/userRedux.js","redux/initialState.js","redux/store.js","components/layout/PageNav/PageNav.js","components/common/Copyright/Copyright.js","components/layout/Footer/Footer.js","components/layout/MainLayout/MainLayout.js","components/layout/Hero/Hero.js","components/common/Card/Card.js","components/layout/Cards/Cards.js","components/views/Homepage/Homepage.js","components/views/Post/Post.js","components/views/PostAdd/PostAdd.js","components/views/PostEdit/PostEdit.js","components/views/MyPosts/MyPosts.js","components/views/Login/Login.js","components/views/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getAll","posts","data","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","UPDATE_POST_STATUS","getLoginState","state","isLogged","UPDATE_LOGIN_STATUS","getCurrentUser","currentUser","initialState","id","isAdmin","email","phone","title","description","publicationDate","lastUpdate","authorEmail","authorId","authorName","status","price","image","imageTitle","loading","active","error","reducers","statePart","action","type","payload","map","post","Object","keys","forEach","item","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Container","connect","className","clsx","styles","root","Button","link","component","NavLink","exact","to","process","activeClassName","logo","Component","children","Typography","variant","color","align","Link","href","Date","getFullYear","gutterBottom","ReduxContainer","dispatch","updateLoginStatus","log","AppBar","maxWidth","Toolbar","disableGutters","onChange","e","target","value","useStyles","makeStyles","theme","marginTop","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","classes","paragraph","Grid","container","justify","card","height","display","flexDirection","transition","transform","cardMedia","paddingTop","cardContent","flexGrow","textDecoration","primary","main","fontWeight","Card","CardMedia","CardContent","CardActions","cardGrid","paddingBottom","key","xs","sm","md","cardActions","position","detail","bottom","right","fontStyle","match","find","el","params","postAuthorId","isPostAuthor","size","layout","width","marginLeft","marginRight","breakpoints","up","marginBottom","buttons","justifyContent","button","paddingLeft","paddingRight","Paper","TextField","required","label","fullWidth","autoComplete","face","band","red","white","blue","eyes","dimples","mouth","btn","createMuiTheme","secondary","App","StylesProvider","injectFirst","ThemeProvider","CssBaseline","path","Homepage","getState","Post","Login","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.918c9538.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"face\":\"NotFound_face__2pvK2\",\"band\":\"NotFound_band__22MLl\",\"red\":\"NotFound_red__24niO\",\"white\":\"NotFound_white__1qtNv\",\"blue\":\"NotFound_blue__3m7su\",\"eyes\":\"NotFound_eyes__2ziqw\",\"dimples\":\"NotFound_dimples__Ytn1O\",\"mouth\":\"NotFound_mouth__UjZAx\",\"btn\":\"NotFound_btn__1_vBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageNav_root__1kTnF\",\"link\":\"PageNav_link__dLwpU\",\"logo\":\"PageNav_logo__2X_X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3S8dX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainLayout_root__1tCmj\"};","//import Axios from 'axios';\r\n//import { api } from '../settings';\r\n\r\n/* selectors */\r\nexport const getAll = ({ posts }) => posts.data;\r\nexport const getLoadingState = ({ posts }) => posts.loading;\r\n\r\n/* action name creator */\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\nconst FETCH_START = createActionName('FETCH_START');\r\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\r\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\r\nconst UPDATE_POST_STATUS = createActionName('UPDATE_POST_STATUS');\r\n\r\n/* action creators */\r\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\r\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\r\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\r\nexport const updatePostStatus = payload => ({ payload, type: UPDATE_POST_STATUS });\r\n\r\n/* thunk creators */\r\n// export const fetchFromAPI = () => {\r\n//   return (dispatch, getState) => {\r\n//     dispatch(fetchStarted());\r\n\r\n//     Axios\r\n//       .get(`${api.url}/${api.posts}`)\r\n//       .then(res => {\r\n//         dispatch(fetchSuccess(res.data));\r\n//       })\r\n//       .catch(err => {\r\n//         dispatch(fetchError(err.message || true));\r\n//       });\r\n//   };\r\n// };\r\n\r\n// export const postToAPI = ({ id, order, status }, newStatus) => {\r\n//   return (dispatch, getState) => {\r\n//     Axios\r\n//       .put(`${api.url}/${api.posts}/${id}`, { id: id, order: order, status: newStatus })\r\n//       .then(res => {\r\n//         dispatch(updatePostStatus(res.data));\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//       });\r\n//   };\r\n// };\r\n\r\n/* reducer */\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: true,\r\n          error: false,\r\n        },\r\n      };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: false,\r\n        },\r\n        data: action.payload,\r\n      };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    }\r\n    case UPDATE_POST_STATUS: {\r\n\r\n      return {\r\n        ...statePart,\r\n        data: [\r\n          ...statePart.data.map(post => post.id === action.payload.id ? action.payload : post),\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","/* selectors */\r\nexport const getLoginState = (state) => state.isLogged;\r\n\r\n/* action name creator */\r\nconst reducerName = 'login';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\nconst UPDATE_LOGIN_STATUS = createActionName('UPDATE_LOGIN_STATUS');\r\n\r\n/* action creators */\r\nexport const updateLoginStatus = payload => ({ payload, type: UPDATE_LOGIN_STATUS });\r\n\r\n/* reducer */\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case UPDATE_LOGIN_STATUS:\r\n      switch (action.payload) {\r\n        case 'login': return true;\r\n        case 'logout': return false;\r\n        default:\r\n          return statePart;\r\n      }\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","/* selectors */\nexport const getCurrentUser = (state) => state.currentUser;\n\n/* action name creator */\n// const reducerName = 'currentUser';\n// const createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\n// const UPDATE_USER_STATUS = createActionName('UPDATE_USER_STATUS');\n\n/* action creators */\n// export const updateUserStatus = payload => ({ payload, type: UPDATE_USER_STATUS });\n\n/* reducer */\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    // case UPDATE_USER_STATUS:\n    //   switch (action.payload) {\n    //     case 'login': return true;\n    //     case 'logout': return false;\n    //     default:\n    //       return statePart;\n    //   }\n    default:\n      return statePart;\n  }\n}\n","export const initialState = {\r\n  currentUser: {\r\n    id: '1',\r\n    isAdmin: false,\r\n    name: 'Adam',\r\n    email: 'aaa@bb.eu',\r\n    phone: '888-777-666',\r\n  },\r\n  isLogged: true,\r\n  posts: {\r\n    data: [\r\n      {\r\n        id: '1',\r\n        title: 'Announcement title 1',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'aaa@bb.eu',\r\n        authorId: '1',\r\n        authorName: 'Adam',\r\n        status: 'draft',\r\n        price: 5,\r\n        phone: '888-777-666',\r\n        image: 'https://cdn.pixabay.com/photo/2018/02/24/20/39/clock-3179167_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'Announcement title 2',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'aaa@bb.eu',\r\n        authorId: '1',\r\n        authorName: 'Adam',\r\n        status: 'draft',\r\n        price: 13,\r\n        phone: '888-777-666',\r\n        image: 'https://cdn.pixabay.com/photo/2014/09/15/21/46/couch-447484_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Announcement title 3',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'aaa@bb.eu',\r\n        authorId: '1',\r\n        authorName: 'Adam',\r\n        status: 'draft',\r\n        price: 125,\r\n        phone: '888-777-666',\r\n        image: 'https://cdn.pixabay.com/photo/2016/11/19/15/50/chair-1840011_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'Announcement title 4',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'ddd@eee.pl',\r\n        authorId: '2',\r\n        authorName: 'Eva',\r\n        status: 'draft',\r\n        price: 98,\r\n        phone: '111-222-333',\r\n        image: 'https://cdn.pixabay.com/photo/2016/12/12/15/30/dodge-charger-1901806_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Announcement title 5',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'ddd@eee.pl',\r\n        authorId: '2',\r\n        authorName: 'Eva',\r\n        status: 'draft',\r\n        price: 57,\r\n        phone: '111-222-333',\r\n        image: 'https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336377_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n      {\r\n        id: '6',\r\n        title: 'Announcement title 6',\r\n        description: 'This is a description. You can use this section to describe the content',\r\n        publicationDate: '2020-04-20',\r\n        lastUpdate: '2020-05-19',\r\n        authorEmail: 'ddd@eee.pl',\r\n        authorId: '2',\r\n        authorName: 'Eva',\r\n        status: 'draft',\r\n        price: 15,\r\n        phone: '111-222-333',\r\n        image: 'https://cdn.pixabay.com/photo/2018/10/31/19/43/books-3786559_960_720.jpg',\r\n        imageTitle: 'Image title1',\r\n      },\r\n\r\n    ],\r\n    loading: {\r\n      active: false,\r\n      error: false,\r\n    },\r\n  },\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport postsReducer from './postsRedux';\nimport loginReducer from './loginRedux';\nimport userReducer from './userRedux';\nimport { initialState } from './initialState';\n\n// define reducers\nconst reducers = {\n  posts: postsReducer,\n  isLogged: loginReducer,\n  currentUser: userReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nconst store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport { store };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './PageNav.module.scss';\n\nimport { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, isLogged }) => (\n  <div className={clsx(className, styles.root)}>\n    <Button className={clsx(styles.link)} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'><i className={clsx(styles.logo, 'fas fa-bullhorn')}></i>Announce It!</Button>\n    <div>\n      <Button className={styles.link} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Homepage</Button>\n      {isLogged && <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/posts`} activeClassName='active'>My posts</Button>}\n      {isLogged\n        ? <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Log Out</Button>\n        : <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/login`} activeClassName='active'>Log In</Button>}\n    </div>\n  </div>\n);\n\nComponent.propTypes = {\n  isLogged: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: state.isLogged,\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as PageNav,\n  Container as PageNav,\n  Component as PageNavComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Copyright.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/grzegorz-jodlowski\">\n        GitHub\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Copyright,\n  // Container as Copyright,\n  Component as CopyrightComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Footer.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Copyright } from '../../common/Copyright/Copyright';\n\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <footer className={clsx(className, styles.root)}>\n    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n      Announce It!\n    </Typography>\n    <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n      Local announcements and advertisements for free\n    </Typography>\n    <Copyright />\n  </footer>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Footer,\n  // Container as Footer,\n  Component as FooterComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { PageNav } from '../PageNav/PageNav';\nimport { Footer } from '../Footer/Footer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nimport styles from './MainLayout.module.scss';\n\nimport { connect } from 'react-redux';\nimport { updateLoginStatus } from '../../../redux/loginRedux';\n\nconst Component = ({ className, children, updateLoginStatus }) => (\n  <div className={clsx(className, styles.root)}>\n    <AppBar>\n      <Container maxWidth='lg'>\n        <Toolbar disableGutters>\n          <PageNav />\n        </Toolbar>\n      </Container>\n    </AppBar>\n    <Container maxWidth='lg'>\n      <Toolbar />\n      <select onChange={(e) => updateLoginStatus(e.target.value)} >\n        <option value=\"login\">Login</option>\n        <option value=\"logout\">Logout</option>\n        <option value=\"admin\">admin</option>\n      </select>\n      {children}\n    </Container>\n    <Footer />\n\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  updateLoginStatus: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateLoginStatus: log => dispatch(updateLoginStatus(log)),\n});\n\nconst ReduxContainer = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as MainLayout,\n  ReduxContainer as MainLayout,\n  Component as MainLayoutComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { connect } from 'react-redux';\nimport { getLoginState } from '../../../redux/loginRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '2rem',\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\n\nconst Component = ({ className, isLogged }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.root)}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Bulletin board\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Do you want to clean space around you? Add and sell things you no longer need. Help others find something interesting!\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              {isLogged && <Button variant=\"contained\" color=\"primary\" href={`${process.env.PUBLIC_URL}/post/add`}>\n                Add new\n              </Button>}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  isLogged: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: getLoginState(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Hero,\n  ReduxContainer as Hero,\n  Component as HeroComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import clsx from 'clsx';\nimport { Link } from 'react-router-dom';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: '.2s',\n    '&:hover': {\n      transform: 'scale(1.04)',\n    },\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  price: {\n    color: theme.palette.primary.main,\n    fontWeight: '700',\n  },\n}));\n\nconst Component = ({ post }) => {\n  const classes = useStyles();\n\n  const { title, image, imageTitle, description, id, price } = post;\n\n  return (\n    <Link to={`${process.env.PUBLIC_URL}/post/${id}`} className={classes.link}>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={image}\n          title={imageTitle}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography>\n            {description}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Typography className={classes.price}>\n            {`Price: ${price}$`}\n          </Typography>\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\nComponent.propTypes = {\n  post: PropTypes.object,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Card,\n  // Container as Card,\n  Component as CardComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Card } from '../../common/Card/Card';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { connect } from 'react-redux';\nimport { getAll } from '../../../redux/postsRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst Component = ({ className, posts }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className)}>\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {posts.map((post) => (\n            <Grid item key={post.id} xs={12} sm={6} md={4}>\n              <Card post={post} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  posts: PropTypes.array,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Cards,\n  ReduxContainer as Cards,\n  Component as CardsComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Homepage.module.scss';\n\nimport { Hero } from '../../layout/Hero/Hero';\nimport { Cards } from '../../layout/Cards/Cards';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <main className={clsx(className, styles.root)}>\n    <Hero />\n    <Cards />\n  </main>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Homepage,\n  // Container as Homepage,\n  Component as HomepageComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n// import styles from './Post.module.scss';\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\nimport { getAll } from '../../../redux/postsRedux';\nimport { getLoginState } from '../../../redux/loginRedux';\nimport { getCurrentUser } from '../../../redux/userRedux';\n\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: '.2s',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  cardActions: {\n    padding: '16px',\n    position: 'relative',\n  },\n  detail: {\n    color: theme.palette.primary.main,\n    fontWeight: '700',\n    paddingTop: '16px',\n  },\n  status: {\n    color: 'red',\n  },\n  publicationDate: {\n    position: 'absolute',\n    bottom: '10px',\n    right: '15px',\n    fontStyle: 'italic',\n  },\n}));\n\n\nconst Component = ({ posts, match, isLogged, currentUser }) => {\n  const classes = useStyles();\n\n  const post = posts.find(el => el.id === match.params.id);\n\n  const { title, image, imageTitle, description, price, id, phone, authorName, authorEmail, status, publicationDate, authorId: postAuthorId } = post;\n  const { isAdmin, id: userId } = currentUser;\n\n  const isPostAuthor = postAuthorId === userId ? true : false;\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid item>\n        <Card className={classes.card}>\n          <CardMedia\n            className={classes.cardMedia}\n            image={image}\n            title={imageTitle}\n          />\n          <CardContent className={classes.cardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              {title}\n            </Typography>\n            <Typography>\n              {description}\n            </Typography>\n            <Typography className={classes.detail}>\n              {`Price: ${price}$`}\n            </Typography>\n            <Typography className={classes.detail}>\n              {`Phone: ${phone}`}\n            </Typography>\n            <Typography className={classes.detail}>\n              {`Seller: ${authorName}`}\n            </Typography>\n            {(isLogged && (isPostAuthor || isAdmin)) && (<Typography className={clsx(classes.detail, classes.status)}>\n              {`Status: ${status}`}\n            </Typography>)}\n\n          </CardContent>\n          <CardActions className={classes.cardActions}>\n            {(isLogged && (isPostAuthor || isAdmin)) && (<Button size=\"medium\" color=\"primary\" variant=\"contained\" href={`${process.env.PUBLIC_URL}/post/${id}/edit`}>\n              Edit\n            </Button>)}\n            <Button size=\"medium\" color=\"primary\" variant=\"contained\" href={`mailto:${authorEmail}`}>\n              Email to seller\n            </Button>\n            <Typography className={classes.publicationDate}>\n              {`${publicationDate}`}\n            </Typography>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Container>\n  );\n};\n\nComponent.propTypes = {\n  posts: PropTypes.array,\n  match: PropTypes.object,\n  currentUser: PropTypes.object,\n  isLogged: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n  isLogged: getLoginState(state),\n  currentUser: getCurrentUser(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Post,\n  ReduxContainer as Post,\n  Component as PostComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n//import clsx from 'clsx';\n\n//import styles from './PostAdd.module.scss';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = makeStyles((theme) => ({\n\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n\n  },\n}));\n\nconst Component = () => {\n  const classes = useStyles();\n\n  return (\n    <main className={classes.layout}>\n      <Paper className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n          Add your new ad\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"authorName\"\n              name=\"authorName\"\n              label=\"First name\"\n              fullWidth\n              autoComplete=\"given-name\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"authorEmail\"\n              name=\"authorEmail\"\n              label=\"Email address\"\n              fullWidth\n              autoComplete=\"email\"\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"title\"\n              name=\"title\"\n              label=\"Title\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <TextField\n              required\n              id=\"description\"\n              name=\"description\"\n              label=\"Description\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"phone\"\n              name=\"phone\"\n              label=\"Phone\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"price\"\n              name=\"price\"\n              label=\"Price\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"image\"\n              name=\"image\"\n              label=\"Image link\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              required\n              id=\"imageTitle\"\n              name=\"imageTitle\"\n              label=\"Image title\"\n              fullWidth\n            />\n          </Grid>\n        </Grid>\n        <div className={classes.buttons}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n          >\n            Add\n          </Button>\n        </div>\n      </Paper>\n    </main>\n  );\n};\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as PostAdd,\n  // Container as PostAdd,\n  Component as PostAddComponent, //for tests\n};\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './PostEdit.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>PostEdit</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as PostEdit,\r\n  // Container as PostEdit,\r\n  Component as PostEditComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './MyPosts.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>MyPosts</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as MyPosts,\r\n  // Container as MyPosts,\r\n  Component as MyPostsComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Login.module.scss';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <h2>Podstrona logowania - endpoint do autoryzacji google</h2>\n    {children}\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Login,\n  // Container as Login,\n  Component as LoginComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './NotFound.module.scss';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <div className={styles.face}>\n      <div className={styles.band}>\n        <div className={styles.red}></div>\n        <div className={styles.white}></div>\n        <div className={styles.blue}></div>\n      </div>\n      <div className={styles.eyes}></div>\n      <div className={styles.dimples}></div>\n      <div className={styles.mouth}></div>\n    </div>\n\n    <h1>Oops! Page not fount!</h1>\n    <div className={styles.btn}><a href={`${process.env.PUBLIC_URL}/`} > Return to Homepage</a></div>\n  </div >\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as NotFound,\n  // Container as NotFound,\n  Component as NotFoundComponent, //for tests\n};\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { createMuiTheme, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport { store } from './redux/store';\n\nimport { MainLayout } from './components/layout/MainLayout/MainLayout';\nimport { Homepage } from './components/views/Homepage/Homepage';\nimport { Post } from './components/views/Post/Post';\nimport { PostAdd } from './components/views/PostAdd/PostAdd';\nimport { PostEdit } from './components/views/PostEdit/PostEdit';\nimport { MyPosts } from './components/views/MyPosts/MyPosts';\nimport { Login } from './components/views/Login/Login';\nimport { NotFound } from './components/views/NotFound/NotFound';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2B4C6F',\n    },\n    secondary: {\n      main: '#c0c0c0',\n    },\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter >\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MainLayout>\n            <Switch>\n              {}\n              <Route exact path={`${process.env.PUBLIC_URL}/`} component={Homepage} />\n              <Route exact path={`${process.env.PUBLIC_URL}/post/add`} >\n                {store.getState().isLogged ? <PostAdd /> : <Redirect to={`${process.env.PUBLIC_URL}/login`} />}\n              </Route>\n              <Route exact path={`${process.env.PUBLIC_URL}/post/:id`} component={Post} />\n              <Route exact path={`${process.env.PUBLIC_URL}/post/:id/edit`} >\n                {store.getState().isLogged ? <PostEdit /> : <Redirect to={`${process.env.PUBLIC_URL}/login`} />}\n              </Route>\n              <Route exact path={`${process.env.PUBLIC_URL}/posts`} >\n                {store.getState().isLogged ? <MyPosts /> : <Redirect to={`${process.env.PUBLIC_URL}/login`} />}\n              </Route>\n              <Route exact path={`${process.env.PUBLIC_URL}/login`} component={Login} />\n              <Route exact path={`${process.env.PUBLIC_URL}*`} component={NotFound} />\n            </Switch>\n          </MainLayout>\n        </ThemeProvider>\n      </StylesProvider>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}