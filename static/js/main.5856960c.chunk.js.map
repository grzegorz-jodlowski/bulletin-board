{"version":3,"sources":["redux/postsRedux.js","redux/loginRedux.js","redux/userRedux.js","redux/initialState.js","redux/store.js","components/layout/PageNav/PageNav.js","components/common/Copyright/Copyright.js","components/layout/Footer/Footer.js","components/layout/MainLayout/MainLayout.js","components/layout/Hero/Hero.js","components/common/Card/Card.js","components/layout/Cards/Cards.js","components/views/Homepage/Homepage.js","components/views/Post/Post.js","components/views/Login/Login.js","components/views/PostAdd/PostAdd.js","components/views/NotFound/NotFound.js","components/views/PostEdit/PostEdit.js","components/views/MyPosts/MyPosts.js","App.js","serviceWorker.js","index.js","components/views/Post/Post.module.scss","components/views/NotFound/NotFound.module.scss","components/layout/PageNav/PageNav.module.scss","components/views/PostAdd/PostAdd.module.scss","components/layout/Footer/Footer.module.scss","components/layout/MainLayout/MainLayout.module.scss","components/layout/Cards/Cards.module.scss"],"names":["getAll","posts","data","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_POST_SUCCESS","FETCH_ERROR","UPDATE_POST_STATUS","ADD_POST","fetchStarted","payload","type","fetchError","fetchPublished","dispatch","getState","state","length","loading","active","Axios","get","then","res","catch","err","message","fetchPostDetails","id","postToAPI","post","console","log","getLoginState","isLogged","UPDATE_LOGIN_STATUS","updateLoginStatus","getCurrentUser","currentUser","UPDATE_ADMIN_STATUS","updateAdminStatus","initialState","isAdmin","email","phone","currentPost","error","reducers","statePart","action","map","Object","keys","forEach","item","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Container","connect","className","clsx","styles","root","Button","link","component","NavLink","exact","to","process","activeClassName","logo","onClick","Component","children","Typography","variant","color","align","Link","href","Date","getFullYear","gutterBottom","ReduxContainer","AppBar","maxWidth","Toolbar","disableGutters","onChange","e","target","value","useStyles","makeStyles","theme","marginTop","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","classes","paragraph","Grid","container","justify","card","height","display","flexDirection","transition","transform","cardMedia","paddingTop","cardContent","flexGrow","textDecoration","price","primary","main","fontWeight","title","photo","_id","author","created","Card","CardMedia","image","CardContent","CardActions","fetchPublishedPosts","this","props","cardGrid","key","xs","sm","md","React","match","params","text","status","isPostAuthor","detail","cardActions","size","updated","location","currentDate","setState","toISOString","layout","Paper","header","TextField","required","label","fullWidth","autoComplete","buttons","button","handleClick","face","band","red","white","blue","eyes","dimples","mouth","btn","marginBottom","width","marginLeft","marginRight","breakpoints","up","justifyContent","paddingLeft","paddingRight","find","el","paddingBottom","createMuiTheme","secondary","App","StylesProvider","injectFirst","ThemeProvider","CssBaseline","path","Homepage","PostAdd","Post","PostEdit","MyPosts","Login","NotFound","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5856960c.chunk.js","sourcesContent":["import Axios from 'axios';\n//import { api } from '../settings';\n\n/* selectors */\nexport const getAll = ({ posts }) => posts.data;\nexport const getCurrentPost = ({ posts }) => posts.currentPost;\nexport const getLoadingState = ({ posts }) => posts.loading;\n\n/* action name creator */\nconst reducerName = 'posts';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_POST_SUCCESS = createActionName('FETCH_POST_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst UPDATE_POST_STATUS = createActionName('UPDATE_POST_STATUS');\nconst ADD_POST = createActionName('ADD_POST');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchPostSuccess = payload => ({ payload, type: FETCH_POST_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const updatePostStatus = payload => ({ payload, type: UPDATE_POST_STATUS });\nexport const addPost = payload => ({ payload, type: ADD_POST });\n\n/* thunk creators */\nexport const fetchPublished = () => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n    const state = getState();\n    if (state.posts.data.length === 0 && state.posts.loading.active) {\n      Axios\n        .get('http://localhost:8000/api/posts')\n        .then(res => {\n          dispatch(fetchSuccess(res.data));\n        })\n        .catch(err => {\n          dispatch(fetchError(err.message || true));\n        });\n    }\n  };\n};\n\nexport const fetchPostDetails = id => {\n  return (dispatch, getState) => {\n    dispatch(fetchStarted());\n\n    Axios\n      .get(`http://localhost:8000/api/posts/${id}`)\n      .then(res => {\n        dispatch(fetchPostSuccess(res.data));\n      })\n      .catch(err => {\n        dispatch(fetchError(err.message || true));\n      });\n  };\n};\n\nexport const postToAPI = (post) => {\n  return (dispatch, getState) => {\n    Axios\n      .post('http://localhost:8000/api/posts/', post)\n      .then(res => {\n        dispatch(addPost(res.data));\n        console.log(res.data);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n};\n\n/* reducer */\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_POST_SUCCESS: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        currentPost: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case UPDATE_POST_STATUS: {\n\n      return {\n        ...statePart,\n        data: [\n          ...statePart.data.map(post => post.id === action.payload.id ? action.payload : post),\n        ],\n      };\n    }\n    case ADD_POST: {\n\n      return {\n        ...statePart,\n        data: [\n          action.payload,\n          ...statePart.data,\n        ],\n      };\n    }\n    default:\n      return statePart;\n  }\n}\n","/* selectors */\r\nexport const getLoginState = (state) => state.isLogged;\r\n\r\n/* action name creator */\r\nconst reducerName = 'login';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\nconst UPDATE_LOGIN_STATUS = createActionName('UPDATE_LOGIN_STATUS');\r\n\r\n/* action creators */\r\nexport const updateLoginStatus = payload => ({ payload, type: UPDATE_LOGIN_STATUS });\r\n\r\n/* reducer */\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case UPDATE_LOGIN_STATUS:\r\n      switch (action.payload) {\r\n        case 'login': return true;\r\n        case 'logout': return false;\r\n        default:\r\n          return statePart;\r\n      }\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","/* selectors */\nexport const getCurrentUser = (state) => state.currentUser;\n\n/* action name creator */\nconst reducerName = 'currentUser';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst UPDATE_ADMIN_STATUS = createActionName('UPDATE_ADMIN_STATUS');\n\n/* action creators */\nexport const updateAdminStatus = payload => ({ payload, type: UPDATE_ADMIN_STATUS });\n\n/* reducer */\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case UPDATE_ADMIN_STATUS: {\n      return {\n        ...statePart,\n        isAdmin: action.payload,\n      };\n    }\n    default:\n      return statePart;\n  }\n}\n","export const initialState = {\r\n  currentUser: {\r\n    id: '1',\r\n    isAdmin: false,\r\n    name: 'Adam',\r\n    email: 'aaa@bb.eu',\r\n    phone: '888-777-666',\r\n  },\r\n  isLogged: true,\r\n  posts: {\r\n    currentPost: {},\r\n    data: [\r\n      // {\r\n      //   id: '1',\r\n      //   title: 'Announcement title 1',\r\n      //   text: 'This is a description. You can use this section to describe the content',\r\n      //   created: '2019-01-05T16:35:17.000Z',\r\n      //   updated: '2019-01-05T16:35:17.000Z',\r\n      //   author: 'aaa@bb.eu',\r\n      //   status: 'published',\r\n      //   price: 5,\r\n      //   phone: '888-777-666',\r\n      //   photo: 'https://cdn.pixabay.com/photo/2018/02/24/20/39/clock-3179167_960_720.jpg',\r\n      //   location: null,\r\n      // },\r\n      // {\r\n      //   id: '2',\r\n      //   title: 'Announcement title 2',\r\n      //   text: 'This is a description. You can use this section to describe the content',\r\n      //   created: '2019-01-05T16:35:17.000Z',\r\n      //   updated: '2019-01-05T16:35:17.000Z',\r\n      //   author: 'aaa@bb.eu',\r\n      //   status: 'published',\r\n      //   price: 13,\r\n      //   phone: '888-777-666',\r\n      //   photo: 'https://cdn.pixabay.com/photo/2014/09/15/21/46/couch-447484_960_720.jpg',\r\n      //   location: null,\r\n      // },\r\n      // {\r\n      //   location: null,\r\n      //   id: '3',\r\n      //   title: 'Announcement title 3',\r\n      //   text: 'This is a description. You can use this section to describe the content',\r\n      //   author: 'aaa@bb.eu',\r\n      //   status: 'draft',\r\n      //   price: 125,\r\n      //   phone: '888-777-666',\r\n      //   photo: 'https://cdn.pixabay.com/photo/2016/11/19/15/50/chair-1840011_960_720.jpg',\r\n      // },\r\n      // {\r\n      //   id: '4',\r\n      //   title: 'Announcement title 4',\r\n      //   description: 'This is a description. You can use this section to describe the content',\r\n      //   publicationDate: '2020-04-20',\r\n      //   lastUpdate: '2020-05-19',\r\n      //   authorEmail: 'ddd@eee.pl',\r\n      //   authorId: '2',\r\n      //   authorName: 'Eva',\r\n      //   status: 'draft',\r\n      //   price: 98,\r\n      //   phone: '111-222-333',\r\n      //   image: 'https://cdn.pixabay.com/photo/2016/12/12/15/30/dodge-charger-1901806_960_720.jpg',\r\n      //   imageTitle: 'Image title1',\r\n      // },\r\n      // {\r\n      //   id: '5',\r\n      //   title: 'Announcement title 5',\r\n      //   description: 'This is a description. You can use this section to describe the content',\r\n      //   publicationDate: '2020-04-20',\r\n      //   lastUpdate: '2020-05-19',\r\n      //   authorEmail: 'ddd@eee.pl',\r\n      //   authorId: '2',\r\n      //   authorName: 'Eva',\r\n      //   status: 'draft',\r\n      //   price: 57,\r\n      //   phone: '111-222-333',\r\n      //   image: 'https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336377_960_720.jpg',\r\n      //   imageTitle: 'Image title1',\r\n      // },\r\n      // {\r\n      //   id: '6',\r\n      //   title: 'Announcement title 6',\r\n      //   description: 'This is a description. You can use this section to describe the content',\r\n      //   publicationDate: '2020-04-20',\r\n      //   lastUpdate: '2020-05-19',\r\n      //   authorEmail: 'ddd@eee.pl',\r\n      //   authorId: '2',\r\n      //   authorName: 'Eva',\r\n      //   status: 'draft',\r\n      //   price: 15,\r\n      //   phone: '111-222-333',\r\n      //   image: 'https://cdn.pixabay.com/photo/2018/10/31/19/43/books-3786559_960_720.jpg',\r\n      //   imageTitle: 'Image title1',\r\n      // },\r\n\r\n    ],\r\n    loading: {\r\n      active: false,\r\n      error: false,\r\n    },\r\n  },\r\n};\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport postsReducer from './postsRedux';\nimport loginReducer from './loginRedux';\nimport userReducer from './userRedux';\nimport { initialState } from './initialState';\n\n// define reducers\nconst reducers = {\n  posts: postsReducer,\n  isLogged: loginReducer,\n  currentUser: userReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nconst store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport { store };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './PageNav.module.scss';\n\nimport { connect } from 'react-redux';\nimport { updateLoginStatus } from '../../../redux/loginRedux';\nimport { updateAdminStatus } from '../../../redux/userRedux';\n\nconst Component = ({ className, isLogged, updateLoginStatus, updateAdminStatus }) => (\n  <div className={clsx(className, styles.root)}>\n    <Button className={clsx(styles.link)} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'><i className={clsx(styles.logo, 'fas fa-bullhorn')}></i>Announce It!</Button>\n    <div>\n      <Button className={styles.link} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Homepage</Button>\n      {isLogged && <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/posts`} activeClassName='active'>My posts</Button>}\n      {isLogged\n        ? <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/`} activeClassName='active' onClick={() => {\n          updateLoginStatus('logout');\n          updateAdminStatus(false);\n        }}\n        >\n          Log Out</Button>\n        : <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/login`} activeClassName='active'>Log In</Button>}\n    </div>\n  </div>\n);\n\nComponent.propTypes = {\n  isLogged: PropTypes.bool,\n  className: PropTypes.string,\n  updateLoginStatus: PropTypes.func,\n  updateAdminStatus: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: state.isLogged,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateLoginStatus: log => dispatch(updateLoginStatus(log)),\n  updateAdminStatus: log => dispatch(updateAdminStatus(log)),\n});\n\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as PageNav,\n  Container as PageNav,\n  Component as PageNavComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Copyright.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/grzegorz-jodlowski\">\n        GitHub\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Copyright,\n  // Container as Copyright,\n  Component as CopyrightComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Footer.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Copyright } from '../../common/Copyright/Copyright';\n\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <footer className={clsx(className, styles.root)}>\n    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n      Announce It!\n    </Typography>\n    <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n      Local announcements and advertisements for free\n    </Typography>\n    <Copyright />\n  </footer>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Footer,\n  // Container as Footer,\n  Component as FooterComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { PageNav } from '../PageNav/PageNav';\nimport { Footer } from '../Footer/Footer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nimport styles from './MainLayout.module.scss';\n\nimport { connect } from 'react-redux';\nimport { updateLoginStatus } from '../../../redux/loginRedux';\nimport { updateAdminStatus } from '../../../redux/userRedux';\n\nconst Component = ({ className, children, updateLoginStatus, updateAdminStatus }) => (\n  <div className={clsx(className, styles.root)}>\n    <AppBar>\n      <Container maxWidth='lg'>\n        <Toolbar disableGutters>\n          <PageNav />\n        </Toolbar>\n      </Container>\n    </AppBar>\n    <Container maxWidth='lg'>\n      <Toolbar />\n      <select onChange={(e) => {\n        if (e.target.value === 'login') {\n          updateLoginStatus('login');\n          updateAdminStatus(false);\n        } else if (e.target.value === 'admin') {\n          console.log(' : e.target.value', e.target.value);\n          updateAdminStatus(true);\n          updateLoginStatus('login');\n        } else {\n          updateLoginStatus('logout');\n          updateAdminStatus(false);\n        }\n      }}>\n        <option value=\"login\">Login</option>\n        <option value=\"logout\">Logout</option>\n        <option value=\"admin\">admin</option>\n      </select>\n      {children}\n    </Container>\n    <Footer />\n\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  updateLoginStatus: PropTypes.func,\n  updateAdminStatus: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateLoginStatus: log => dispatch(updateLoginStatus(log)),\n  updateAdminStatus: log => dispatch(updateAdminStatus(log)),\n});\n\nconst ReduxContainer = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as MainLayout,\n  ReduxContainer as MainLayout,\n  Component as MainLayoutComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { Link } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { connect } from 'react-redux';\nimport { getLoginState } from '../../../redux/loginRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: '2rem',\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\n\nconst Component = ({ className, isLogged }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, classes.root)}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Bulletin board\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Do you want to clean space around you? Add and sell things you no longer need. Help others find something interesting!\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              {isLogged && <Button component={Link} variant=\"contained\" color=\"primary\" to={`${process.env.PUBLIC_URL}/post/add`}>\n                Add new\n              </Button>}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  className: PropTypes.string,\n  isLogged: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: getLoginState(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Hero,\n  ReduxContainer as Hero,\n  Component as HeroComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import clsx from 'clsx';\nimport { Link } from 'react-router-dom';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n    transition: '.2s',\n    '&:hover': {\n      transform: 'scale(1.04)',\n    },\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  link: {\n    textDecoration: 'none',\n  },\n  price: {\n    color: theme.palette.primary.main,\n    fontWeight: '700',\n  },\n}));\n\nconst Component = ({ post }) => {\n  const classes = useStyles();\n\n  const { title, photo, _id, author, created, price } = post;\n\n  return (\n    <Link to={`${process.env.PUBLIC_URL}/post/${_id}`} className={classes.link}>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={photo}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography>\n            Tap to read more...\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Typography className={classes.price}>\n            {`Price: ${price}$`}\n          </Typography>\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\nComponent.propTypes = {\n  post: PropTypes.object,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Card,\n  // Container as Card,\n  Component as CardComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Cards.module.scss';\n\nimport { Card } from '../../common/Card/Card';\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\n\nimport { connect } from 'react-redux';\nimport { getAll, fetchPublished } from '../../../redux/postsRedux';\n\nclass Component extends React.Component {\n\n  componentDidMount() {\n    const { fetchPublishedPosts } = this.props;\n\n    fetchPublishedPosts();\n  }\n\n  render() {\n    const { posts } = this.props;\n\n    return (\n      <Container className={styles.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {posts.map((post) => (\n            <Grid item key={post.id} xs={12} sm={6} md={4}>\n              <Card post={post} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nComponent.propTypes = {\n  posts: PropTypes.array,\n  fetchPublishedPosts: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPublishedPosts: () => dispatch(fetchPublished()),\n});\n\nconst ReduxContainer = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Cards,\n  ReduxContainer as Cards,\n  Component as CardsComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Homepage.module.scss';\n\nimport { Hero } from '../../layout/Hero/Hero';\nimport { Cards } from '../../layout/Cards/Cards';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <main className={clsx(className, styles.root)}>\n    <Hero />\n    <Cards />\n  </main>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Homepage,\n  // Container as Homepage,\n  Component as HomepageComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Post.module.scss';\n\nimport { Link } from 'react-router-dom';\n\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nimport { connect } from 'react-redux';\nimport { getCurrentPost, fetchPostDetails } from '../../../redux/postsRedux';\nimport { getLoginState } from '../../../redux/loginRedux';\nimport { getCurrentUser } from '../../../redux/userRedux';\n\nclass Component extends React.Component {\n  componentDidMount() {\n    const { match, fetchPostDetails } = this.props;\n    console.log(' : Component -> componentDidMount -> match', match.params._id);\n    fetchPostDetails(match.params._id);\n  }\n\n  render() {\n    const { post, isLogged, match, currentUser } = this.props;\n\n    const { title, photo, text, price, _id, phone, author, status, created } = post;\n    const { isAdmin, email } = currentUser;\n\n    const isPostAuthor = author === email ? true : false;\n\n    return (\n      <Container className={styles.cardGrid} maxWidth=\"md\">\n        <Grid item>\n          <Card className={styles.card}>\n            <CardMedia\n              className={styles.cardMedia}\n              image={photo}\n            />\n            <CardContent className={styles.cardContent}>\n              <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {title}\n              </Typography>\n              <Typography>\n                {text}\n              </Typography>\n              <Typography className={styles.detail}>\n                {`Price: ${price}$`}\n              </Typography>\n              <Typography className={styles.detail}>\n                {`Phone: ${phone}`}\n              </Typography>\n              {(isLogged && (isPostAuthor || isAdmin)) && (<Typography className={clsx(styles.detail, styles.status)}>\n                {`Status: ${status}`}\n              </Typography>)}\n\n            </CardContent>\n            <CardActions className={styles.cardActions}>\n              {(isLogged && (isPostAuthor || isAdmin)) && (<Button component={Link} size=\"medium\" color=\"primary\" variant=\"contained\" to={`${process.env.PUBLIC_URL}/post/${_id}/edit`}>\n                Edit\n              </Button>)}\n              <Button size=\"medium\" color=\"primary\" variant=\"contained\" href={`mailto:${author}`}>\n                Email to seller\n              </Button>\n              <Typography className={styles.created}>\n                {`${created}`}\n              </Typography>\n            </CardActions>\n          </Card>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nComponent.propTypes = {\n  post: PropTypes.array,\n  match: PropTypes.object,\n  currentUser: PropTypes.object,\n  isLogged: PropTypes.bool,\n  fetchPostDetails: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n  post: getCurrentPost(state),\n  isLogged: getLoginState(state),\n  currentUser: getCurrentUser(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchPostDetails: (id) => dispatch(fetchPostDetails(id)),\n});\n\nconst ReduxContainer = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as Post,\n  ReduxContainer as Post,\n  Component as PostComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Login.module.scss';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <h2>Podstrona logowania - endpoint do autoryzacji google</h2>\n    {children}\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Login,\n  // Container as Login,\n  Component as LoginComponent, //for tests\n};\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import clsx from 'clsx';\r\n\r\nimport styles from './PostAdd.module.scss';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getLoginState } from '../../../redux/loginRedux';\r\nimport { postToAPI } from '../../../redux/postsRedux';\r\n\r\nimport { Login } from '../Login/Login';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass Component extends React.Component {\r\n  state = {\r\n    author: '',\r\n    created: '',\r\n    updated: '',\r\n    status: '',\r\n    title: '',\r\n    text: '',\r\n    photo: '',\r\n    price: '',\r\n    phone: '',\r\n    location: '',\r\n  }\r\n\r\n  handleClick() {\r\n    const { postToAPI } = this.props;\r\n\r\n    const currentDate = new Date();\r\n\r\n    this.setState({ created: currentDate.toISOString(), updated: currentDate.toISOString(), status: 'published' }, () => {\r\n      postToAPI(this.state);\r\n      this.setState({\r\n        author: '',\r\n        created: '',\r\n        updated: '',\r\n        status: '',\r\n        title: '',\r\n        text: '',\r\n        photo: '',\r\n        price: '',\r\n        phone: '',\r\n        location: '',\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { isLogged } = this.props;\r\n\r\n    if (isLogged) {\r\n      return (\r\n        <main className={styles.layout}>\r\n          <Paper className={styles.paper}>\r\n            <Typography className={styles.header} component=\"h1\" variant=\"h4\" align=\"center\">\r\n              Add your new ad\r\n            </Typography>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  label=\"Email address\"\r\n                  fullWidth\r\n                  autoComplete=\"email\"\r\n                  value={this.state.author}\r\n                  onChange={(e) => this.setState({ author: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"title\"\r\n                  name=\"title\"\r\n                  label=\"Title\"\r\n                  fullWidth\r\n                  value={this.state.title}\r\n                  onChange={(e) => this.setState({ title: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextField\r\n                  required\r\n                  id=\"text\"\r\n                  name=\"text\"\r\n                  label=\"Description\"\r\n                  fullWidth\r\n                  value={this.state.text}\r\n                  onChange={(e) => this.setState({ text: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"phone\"\r\n                  name=\"phone\"\r\n                  label=\"Phone\"\r\n                  fullWidth\r\n                  value={this.state.phone}\r\n                  onChange={(e) => this.setState({ phone: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"price\"\r\n                  name=\"price\"\r\n                  label=\"Price\"\r\n                  fullWidth\r\n                  value={this.state.price}\r\n                  onChange={(e) => this.setState({ price: e.target.value })}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <TextField\r\n                  id=\"photo\"\r\n                  name=\"photo\"\r\n                  label=\"Image link\"\r\n                  fullWidth\r\n                  value={this.state.photo}\r\n                  onChange={(e) => this.setState({ photo: e.target.value })}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n            <div className={styles.buttons}>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={styles.button}\r\n                onClick={() => this.handleClick()}\r\n              >\r\n                Add\r\n              </Button>\r\n            </div>\r\n          </Paper>\r\n        </main>\r\n      );\r\n    } else {\r\n      return <Login />;\r\n    }\r\n  }\r\n}\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  isLogged: PropTypes.bool,\r\n  postToAPI: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isLogged: getLoginState(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  postToAPI: (post) => dispatch(postToAPI(post)),\r\n});\r\n\r\nconst Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  // Component as PostAdd,\r\n  Container as PostAdd,\r\n  Component as PostAddComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './NotFound.module.scss';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <div className={styles.face}>\n      <div className={styles.band}>\n        <div className={styles.red}></div>\n        <div className={styles.white}></div>\n        <div className={styles.blue}></div>\n      </div>\n      <div className={styles.eyes}></div>\n      <div className={styles.dimples}></div>\n      <div className={styles.mouth}></div>\n    </div>\n\n    <h1>Oops! Page not fount!</h1>\n    <div className={styles.btn}><a href={`${process.env.PUBLIC_URL}/`} > Return to Homepage</a></div>\n  </div >\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as NotFound,\n  // Container as NotFound,\n  Component as NotFoundComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './PostEdit.module.scss';\n\nimport { connect } from 'react-redux';\nimport { getLoginState } from '../../../redux/loginRedux';\nimport { getCurrentUser } from '../../../redux/userRedux';\nimport { getAll } from '../../../redux/postsRedux';\n\nimport { Login } from '../Login/Login';\nimport { NotFound } from '../NotFound/NotFound';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    marginBottom: '25px',\n  },\n  layout: {\n    width: 'auto',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(800 + theme.spacing(2) * 2)]: {\n      width: 800,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n    paddingLeft: theme.spacing(4),\n    paddingRight: theme.spacing(4),\n\n  },\n}));\n\nconst Component = ({ isLogged, currentUser, match, posts }) => {\n  const classes = useStyles();\n\n  const post = posts.find(el => el._id === match.params._id);\n\n  const { title, photo, text, price, _id, phone, author, status, created } = post;\n  const { isAdmin, email } = currentUser;\n\n  const isPostAuthor = author === email ? true : false;\n\n  if (isLogged && (isPostAuthor || isAdmin)) {\n    return (\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography className={classes.header} component=\"h1\" variant=\"h4\" align=\"center\">\n            Edit your ad\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"author\"\n                name=\"author\"\n                label=\"Email address\"\n                fullWidth\n                autoComplete=\"email\"\n                value={author}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"title\"\n                label=\"Title\"\n                fullWidth\n                value={title}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"text\"\n                name=\"text\"\n                label=\"Description\"\n                fullWidth\n                value={text}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"phone\"\n                name=\"phone\"\n                label=\"Phone\"\n                fullWidth\n                value={phone}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"price\"\n                name=\"price\"\n                label=\"Price\"\n                fullWidth\n                value={price}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                id=\"photo\"\n                name=\"photo\"\n                label=\"Image link\"\n                fullWidth\n                value={photo}\n              />\n            </Grid>\n          </Grid>\n          <div className={classes.buttons}>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n            >\n              Edit\n            </Button>\n          </div>\n        </Paper>\n      </main>\n    );\n  } else if (isLogged) {\n    return <NotFound />;\n  } else {\n    return <Login />;\n  }\n};\n\nComponent.propTypes = {\n  posts: PropTypes.array,\n  match: PropTypes.object,\n  currentUser: PropTypes.object,\n  isLogged: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  posts: getAll(state),\n  isLogged: getLoginState(state),\n  currentUser: getCurrentUser(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as PostEdit,\n  Container as PostEdit,\n  Component as PostEditComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './MyPosts.module.scss';\n\nimport { connect } from 'react-redux';\nimport { getLoginState } from '../../../redux/loginRedux';\nimport { getAll } from '../../../redux/postsRedux';\nimport { getCurrentUser } from '../../../redux/userRedux';\n\nimport { Login } from '../Login/Login';\nimport { Card } from '../../common/Card/Card';\n\n\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n}));\n\nconst Component = ({ isLogged, posts, currentUser }) => {\n  const classes = useStyles();\n\n  const { isAdmin, email } = currentUser;\n  if (isLogged) {\n    return (\n      <Container className={classes.cardGrid} maxWidth=\"md\">\n        <Grid container spacing={4}>\n          {posts.map((post) => {\n            if (post.author === email) {\n              return (<Grid item key={post.id} xs={12} sm={6} md={4}>\n                <Card post={post} />\n              </Grid>);\n            } else if (isAdmin) {\n              return (<Grid item key={post.id} xs={12} sm={6} md={4}>\n                <Card post={post} />\n              </Grid>);\n            } else {\n              return null;\n            }\n          })}\n        </Grid>\n      </Container>\n    );\n  } else {\n    return <Login />;\n  }\n};\n\nComponent.propTypes = {\n  isLogged: PropTypes.bool,\n  posts: PropTypes.array,\n  currentUser: PropTypes.object,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: getLoginState(state),\n  posts: getAll(state),\n  currentUser: getCurrentUser(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as MyPosts,\n  ReduxContainer as MyPosts,\n  Component as MyPostsComponent, //for tests\n};\n\n","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { createMuiTheme, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport { store } from './redux/store';\n\nimport { MainLayout } from './components/layout/MainLayout/MainLayout';\nimport { Homepage } from './components/views/Homepage/Homepage';\nimport { Post } from './components/views/Post/Post';\nimport { PostAdd } from './components/views/PostAdd/PostAdd';\nimport { PostEdit } from './components/views/PostEdit/PostEdit';\nimport { MyPosts } from './components/views/MyPosts/MyPosts';\nimport { Login } from './components/views/Login/Login';\nimport { NotFound } from './components/views/NotFound/NotFound';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2B4C6F',\n    },\n    secondary: {\n      main: '#c0c0c0',\n    },\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter >\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MainLayout>\n            <Switch>\n              <Route exact path={`${process.env.PUBLIC_URL}/`} component={Homepage} />\n              <Route exact path={`${process.env.PUBLIC_URL}/post/add`} component={PostAdd} />\n              <Route exact path={`${process.env.PUBLIC_URL}/post/:_id`} component={Post} />\n              <Route exact path={`${process.env.PUBLIC_URL}/post/:_id/edit`} component={PostEdit} />\n              <Route exact path={`${process.env.PUBLIC_URL}/posts`} component={MyPosts} />\n              <Route exact path={`${process.env.PUBLIC_URL}/login`} component={Login} />\n              <Route exact path={`${process.env.PUBLIC_URL}*`} component={NotFound} />\n            </Switch>\n          </MainLayout>\n        </ThemeProvider>\n      </StylesProvider>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGrid\":\"Post_cardGrid__18cAY\",\"card\":\"Post_card__3Mupq\",\"cardMedia\":\"Post_cardMedia__3mler\",\"cardContent\":\"Post_cardContent__337nJ\",\"cardActions\":\"Post_cardActions__28KaQ\",\"detail\":\"Post_detail__1cXpS\",\"status\":\"Post_status__NeL-f\",\"created\":\"Post_created__2Q9EB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"face\":\"NotFound_face__2pvK2\",\"band\":\"NotFound_band__22MLl\",\"red\":\"NotFound_red__24niO\",\"white\":\"NotFound_white__1qtNv\",\"blue\":\"NotFound_blue__3m7su\",\"eyes\":\"NotFound_eyes__2ziqw\",\"dimples\":\"NotFound_dimples__Ytn1O\",\"mouth\":\"NotFound_mouth__UjZAx\",\"btn\":\"NotFound_btn__1_vBl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageNav_root__1kTnF\",\"link\":\"PageNav_link__dLwpU\",\"logo\":\"PageNav_logo__2X_X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"PostAdd_header__3S7qj\",\"layout\":\"PostAdd_layout__3dm9D\",\"paper\":\"PostAdd_paper__-IEiC\",\"buttons\":\"PostAdd_buttons__2OjOL\",\"button\":\"PostAdd_button__2WREw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3S8dX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainLayout_root__1tCmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardGrid\":\"Cards_cardGrid__17zTV\"};"],"sourceRoot":""}