{"version":3,"sources":["components/layout/PageNav/PageNav.module.scss","components/layout/Footer/Footer.module.scss","components/layout/MainLayout/MainLayout.module.scss","components/layout/Hero/Hero.module.scss","redux/postsRedux.js","redux/loginRedux.js","redux/initialState.js","redux/store.js","components/layout/PageNav/PageNav.js","components/common/Copyright/Copyright.js","components/layout/Footer/Footer.js","components/layout/MainLayout/MainLayout.js","components/layout/Hero/Hero.js","components/common/Card/Card.js","components/layout/Cards/Cards.js","components/views/Homepage/Homepage.js","components/views/Post/Post.js","components/views/PostAdd/PostAdd.js","components/views/PostEdit/PostEdit.js","components/views/MyPosts/MyPosts.js","components/views/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","UPDATE_POST_STATUS","getLoginState","state","isLogged","UPDATE_LOGIN_STATUS","initialState","posts","data","id","title","description","publicationDate","lastUpdate","authorEmail","status","price","phone","image","imageTitle","loading","active","error","reducers","statePart","action","type","payload","map","post","Object","keys","forEach","item","combinedReducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","Container","connect","className","clsx","styles","root","Button","link","component","NavLink","exact","to","process","activeClassName","logo","Component","children","Typography","variant","color","align","Link","href","Date","getFullYear","gutterBottom","ReduxContainer","dispatch","updateLoginStatus","log","AppBar","maxWidth","Toolbar","disableGutters","onChange","e","target","value","useStyles","makeStyles","theme","heroContent","backgroundColor","palette","background","paper","padding","spacing","heroButtons","marginTop","classes","paragraph","Grid","container","justify","card","height","display","flexDirection","cardMedia","paddingTop","cardContent","flexGrow","underline","Card","CardMedia","CardContent","CardActions","cardGrid","paddingBottom","key","xs","sm","md","createMuiTheme","primary","main","secondary","App","basename","StylesProvider","injectFirst","ThemeProvider","CssBaseline","path","Homepage","PostAdd","Post","PostEdit","MyPosts","NotFound","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.127a444a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"PageNav_root__1kTnF\",\"link\":\"PageNav_link__dLwpU\",\"logo\":\"PageNav_logo__2X_X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Footer_root__3S8dX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"MainLayout_root__1tCmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Hero_root__2tGfh\"};","//import Axios from 'axios';\r\n//import { api } from '../settings';\r\n\r\n/* selectors */\r\nexport const getAll = ({ posts }) => posts.data;\r\nexport const getLoadingState = ({ posts }) => posts.loading;\r\n\r\n/* action name creator */\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* action types */\r\nconst FETCH_START = createActionName('FETCH_START');\r\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\r\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\r\nconst UPDATE_POST_STATUS = createActionName('UPDATE_POST_STATUS');\r\n\r\n/* action creators */\r\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\r\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\r\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\r\nexport const updatePostStatus = payload => ({ payload, type: UPDATE_POST_STATUS });\r\n\r\n/* thunk creators */\r\n// export const fetchFromAPI = () => {\r\n//   return (dispatch, getState) => {\r\n//     dispatch(fetchStarted());\r\n\r\n//     Axios\r\n//       .get(`${api.url}/${api.posts}`)\r\n//       .then(res => {\r\n//         dispatch(fetchSuccess(res.data));\r\n//       })\r\n//       .catch(err => {\r\n//         dispatch(fetchError(err.message || true));\r\n//       });\r\n//   };\r\n// };\r\n\r\n// export const postToAPI = ({ id, order, status }, newStatus) => {\r\n//   return (dispatch, getState) => {\r\n//     Axios\r\n//       .put(`${api.url}/${api.posts}/${id}`, { id: id, order: order, status: newStatus })\r\n//       .then(res => {\r\n//         dispatch(updatePostStatus(res.data));\r\n//       })\r\n//       .catch(err => {\r\n//         console.log(err);\r\n//       });\r\n//   };\r\n// };\r\n\r\n/* reducer */\r\nexport default function reducer(statePart = [], action = {}) {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: true,\r\n          error: false,\r\n        },\r\n      };\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: false,\r\n        },\r\n        data: action.payload,\r\n      };\r\n    }\r\n    case FETCH_ERROR: {\r\n      return {\r\n        ...statePart,\r\n        loading: {\r\n          active: false,\r\n          error: action.payload,\r\n        },\r\n      };\r\n    }\r\n    case UPDATE_POST_STATUS: {\r\n\r\n      return {\r\n        ...statePart,\r\n        data: [\r\n          ...statePart.data.map(post => post.id === action.payload.id ? action.payload : post),\r\n        ],\r\n      };\r\n    }\r\n    default:\r\n      return statePart;\r\n  }\r\n}\r\n","/* selectors */\nexport const getLoginState = (state) => state.isLogged;\n\n/* action name creator */\nconst reducerName = 'login';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst UPDATE_LOGIN_STATUS = createActionName('UPDATE_LOGIN_STATUS');\n\n/* action creators */\nexport const updateLoginStatus = payload => ({ payload, type: UPDATE_LOGIN_STATUS });\n\n/* reducer */\nexport default function reducer(statePart = [], action = {}) {\n  switch (action.type) {\n    case UPDATE_LOGIN_STATUS:\n      switch (action.payload) {\n        case 'login': return true;\n        case 'logout': return false;\n        default:\n          return statePart;\n      }\n    default:\n      return statePart;\n  }\n}\n","export const initialState = {\n  isLogged: true,\n  posts: {\n    data: [\n      {\n        id: '1',\n        title: 'Announcement title 1',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2018/02/24/20/39/clock-3179167_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n      {\n        id: '2',\n        title: 'Announcement title 2',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2014/09/15/21/46/couch-447484_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n      {\n        id: '3',\n        title: 'Announcement title 3',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2016/11/19/15/50/chair-1840011_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n      {\n        id: '4',\n        title: 'Announcement title 4',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2016/12/12/15/30/dodge-charger-1901806_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n      {\n        id: '5',\n        title: 'Announcement title 5',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2014/05/02/21/50/home-office-336377_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n      {\n        id: '6',\n        title: 'Announcement title 6',\n        description: 'This is a description. You can use this section to describe the content',\n        publicationDate: '2020-04-20',\n        lastUpdate: '2020-05-19',\n        authorEmail: 'aaa@bb.eu',\n        status: 'draft',\n        price: 55,\n        phone: '888-777-666',\n        image: 'https://cdn.pixabay.com/photo/2018/10/31/19/43/books-3786559_960_720.jpg',\n        imageTitle: 'Image title1',\n      },\n\n    ],\n    loading: {\n      active: false,\n      error: false,\n    },\n  },\n};\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport postsReducer from './postsRedux';\nimport loginReducer from './loginRedux';\nimport { initialState } from './initialState';\n\n// define reducers\nconst reducers = {\n  posts: postsReducer,\n  isLogged: loginReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nconst store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n\nexport { store };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\n\nimport { NavLink } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nimport styles from './PageNav.module.scss';\n\nimport { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, isLogged }) => (\n  <div className={clsx(className, styles.root)}>\n    <Button className={clsx(styles.link)} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'><i className={clsx(styles.logo, 'fas fa-bullhorn')}></i>Announce It!</Button>\n    <div>\n      <Button className={styles.link} component={NavLink} exact to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Homepage</Button>\n      {isLogged && <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/posts`} activeClassName='active'>My posts</Button>}\n      {isLogged\n        ? <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/`} activeClassName='active'>Log Out</Button>\n        : <Button className={styles.link} component={NavLink} to={`${process.env.PUBLIC_URL}/login`} activeClassName='active'>Log In</Button>}\n    </div>\n  </div>\n);\n\nComponent.propTypes = {\n  isLogged: PropTypes.bool,\n  className: PropTypes.string,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: state.isLogged,\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst Container = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as PageNav,\n  Container as PageNav,\n  Component as PageNavComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Copyright.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <div className={clsx(className, styles.root)}>\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/grzegorz-jodlowski\">\n        GitHub\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Copyright,\n  // Container as Copyright,\n  Component as CopyrightComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Footer.module.scss';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Copyright } from '../../common/Copyright/Copyright';\n\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <footer className={clsx(className, styles.root)}>\n    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n      Announce It!\n    </Typography>\n    <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n      Local announcements and advertisements for free\n    </Typography>\n    <Copyright />\n  </footer>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Footer,\n  // Container as Footer,\n  Component as FooterComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport { PageNav } from '../PageNav/PageNav';\nimport { Footer } from '../Footer/Footer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Container from '@material-ui/core/Container';\n\nimport styles from './MainLayout.module.scss';\n\nimport { connect } from 'react-redux';\nimport { updateLoginStatus } from '../../../redux/loginRedux';\n\nconst Component = ({ className, children, updateLoginStatus }) => (\n  <div className={clsx(className, styles.root)}>\n    <AppBar>\n      <Container maxWidth='lg'>\n        <Toolbar disableGutters>\n          <PageNav />\n        </Toolbar>\n      </Container>\n    </AppBar>\n    <Container maxWidth='lg'>\n      <Toolbar />\n      <select onChange={(e) => updateLoginStatus(e.target.value)} >\n        <option value=\"login\">Login</option>\n        <option value=\"logout\">Logout</option>\n        <option value=\"admin\">admin</option>\n      </select>\n      {children}\n    </Container>\n    <Footer />\n\n  </div>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  updateLoginStatus: PropTypes.func,\n};\n\nconst mapStateToProps = state => ({\n});\n\nconst mapDispatchToProps = dispatch => ({\n  updateLoginStatus: log => dispatch(updateLoginStatus(log)),\n});\n\nconst ReduxContainer = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  // Component as MainLayout,\n  ReduxContainer as MainLayout,\n  Component as MainLayoutComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Hero.module.scss';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nimport { connect } from 'react-redux';\nimport { getLoginState } from '../../../redux/loginRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\n\nconst Component = ({ className, children, isLogged }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(className, styles.root)}>\n      <Container maxWidth=\"sm\">\n        <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Bulletin board\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n          Do you want to clean space around you? Add and sell things you no longer need. Help others find something interesting!\n        </Typography>\n        <div className={classes.heroButtons}>\n          <Grid container spacing={2} justify=\"center\">\n            <Grid item>\n              {isLogged && <Button variant=\"contained\" color=\"primary\" href={`${process.env.PUBLIC_URL}/post/add`}>\n                Add new post\n              </Button>}\n            </Grid>\n          </Grid>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  isLogged: PropTypes.bool,\n};\n\nconst mapStateToProps = state => ({\n  isLogged: getLoginState(state),\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\nconst ReduxContainer = connect(mapStateToProps)(Component);\n\nexport {\n  // Component as Hero,\n  ReduxContainer as Hero,\n  Component as HeroComponent, //for tests\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Card.module.scss';\n\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    height: '100%',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  cardMedia: {\n    paddingTop: '56.25%', // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Component = ({ post }) => {\n  const classes = useStyles();\n\n  const { title, image, imageTitle, description, id } = post;\n\n  return (\n    <Link underline='none' href={`${process.env.PUBLIC_URL}/post/${id}`}>\n      <Card className={classes.card}>\n        <CardMedia\n          className={classes.cardMedia}\n          image={image}\n          title={imageTitle}\n        />\n        <CardContent className={classes.cardContent}>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography>\n            {description}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          {/* <Button size=\"small\" color=\"primary\" href={`${process.env.PUBLIC_URL}/post/${id}`}>\n                    View\n                  </Button> */}\n          {/* <Button size=\"small\" color=\"primary\">\n                    Edit\n                  </Button> */}\n        </CardActions>\n      </Card>\n    </Link>\n  );\n};\nComponent.propTypes = {\n  className: PropTypes.string,\n  post: PropTypes.object,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Card,\n  // Container as Card,\n  Component as CardComponent, //for tests\n};\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './Cards.module.scss';\r\n\r\nimport { Card } from '../../common/Card/Card';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getAll } from '../../../redux/postsRedux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  cardGrid: {\r\n    paddingTop: theme.spacing(8),\r\n    paddingBottom: theme.spacing(8),\r\n  },\r\n}));\r\n\r\nconst Component = ({ className, posts }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={clsx(className, styles.root)}>\r\n      <Container className={classes.cardGrid} maxWidth=\"md\">\r\n        <Grid container spacing={4}>\r\n          {posts.map((post) => (\r\n            <Grid item key={post.title} xs={12} sm={6} md={4}>\r\n              <Card post={post} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nComponent.propTypes = {\r\n  className: PropTypes.string,\r\n  posts: PropTypes.array,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getAll(state),\r\n});\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\nconst ReduxContainer = connect(mapStateToProps)(Component);\r\n\r\nexport {\r\n  // Component as Cards,\r\n  ReduxContainer as Cards,\r\n  Component as CardsComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\n\nimport styles from './Homepage.module.scss';\n\nimport { Hero } from '../../layout/Hero/Hero';\nimport { Cards } from '../../layout/Cards/Cards';\n\n\n// import { connect } from 'react-redux';\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\n\nconst Component = ({ className, children }) => (\n  <main className={clsx(className, styles.root)}>\n    <Hero />\n    <Cards />\n  </main>\n);\n\nComponent.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n};\n\n// const mapStateToProps = state => ({\n//   concerts: reduxSelector(state),\n// });\n\n// const mapDispatchToProps = dispatch => ({\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\n// });\n\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\n\nexport {\n  Component as Homepage,\n  // Container as Homepage,\n  Component as HomepageComponent, //for tests\n};\n\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './Post.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>Post</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as Post,\r\n  // Container as Post,\r\n  Component as PostComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './PostAdd.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>PostAdd</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as PostAdd,\r\n  // Container as PostAdd,\r\n  Component as PostAddComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './PostEdit.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>PostEdit</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as PostEdit,\r\n  // Container as PostEdit,\r\n  Component as PostEditComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './MyPosts.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>MyPosts</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as MyPosts,\r\n  // Container as MyPosts,\r\n  Component as MyPostsComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\n\r\nimport styles from './NotFound.module.scss';\r\n\r\n// import { connect } from 'react-redux';\r\n// import { reduxSelector, reduxActionCreator } from '../../../redux/ExampleRedux';\r\n\r\nconst Component = ({ className, children }) => (\r\n  <div className={clsx(className, styles.root)}>\r\n    <h2>NotFound</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nComponent.propTypes = {\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n};\r\n\r\n// const mapStateToProps = state => ({\r\n//   concerts: reduxSelector(state),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   someAction: arg => dispatch(reduxActionCreator(arg)),\r\n// });\r\n\r\n// const Container = connect(mapStateToProps, mapDispatchToProps)(Component);\r\n\r\nexport {\r\n  Component as NotFound,\r\n  // Container as NotFound,\r\n  Component as NotFoundComponent, //for tests\r\n};\r\n\r\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { createMuiTheme, StylesProvider, ThemeProvider } from '@material-ui/core/styles';\nimport { CssBaseline } from '@material-ui/core';\n\nimport { store } from './redux/store';\n\nimport { MainLayout } from './components/layout/MainLayout/MainLayout';\nimport { Homepage } from './components/views/Homepage/Homepage';\nimport { Post } from './components/views/Post/Post';\nimport { PostAdd } from './components/views/PostAdd/PostAdd';\nimport { PostEdit } from './components/views/PostEdit/PostEdit';\nimport { MyPosts } from './components/views/MyPosts/MyPosts';\nimport { NotFound } from './components/views/NotFound/NotFound';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#2B4C6F',\n    },\n    secondary: {\n      main: '#c0c0c0',\n    },\n  },\n});\n\nconst App = () => (\n  <Provider store={store}>\n    <BrowserRouter basename=\"/\">\n      <StylesProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <MainLayout>\n            <Switch>\n              <Route exact path='/' component={Homepage} />\n              <Route exact path='/post/add' component={PostAdd} />\n              <Route exact path='/post/:id' component={Post} />\n              <Route exact path='/post/:id/edit' component={PostEdit} />\n              <Route exact path='/posts' component={MyPosts} />\n              <Route exact path='*' component={NotFound} />\n            </Switch>\n          </MainLayout>\n        </ThemeProvider>\n      </StylesProvider>\n    </BrowserRouter>\n  </Provider>\n);\n\nexport { App };\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}